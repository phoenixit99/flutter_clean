name: Desktop Release Build

# Add environment variables at the top level
env:
  PACTUS_VERSION: "v1.6.4"
  LINUX_ASSETS_URL: https://github.com/pactus-project/pactus/releases/download/v1.6.4/pactus-cli_1.6.4_linux_amd64.tar.gz
  WINDOWS_ASSETS_URL: https://github.com/pactus-project/pactus/releases/download/v1.6.4/pactus-cli_1.6.4_windows_amd64.zip
  MACOS_ASSETS_URL: https://github.com/pactus-project/pactus/releases/download/v1.6.4/pactus-cli_1.6.4_darwin_arm64.tar.gz
  SOURCE_PATH: lib/src/core/common/files

permissions:
  contents: write
  pull-requests: read

on:
  pull_request_target:
    types: [closed]
    branches: [ "develop" ]

jobs:
  build-and-release-linux:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      release_tag: linux-release-${{ github.run_number }}
      platform: Linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev
          sudo apt-get install -y cmake pkg-config
          sudo apt-get install -y libblkid-dev
          sudo apt-get install -y liblzma-dev
          sudo apt-get install -y unzip

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Get dependencies
        run: flutter pub get        

      - name: Fetch and Extract File
        run: |
          mkdir -p ${{ env.SOURCE_PATH }}
          curl -L -o file.tar.gz ${{ env.LINUX_ASSETS_URL }}
          mkdir -p temp_extract
          tar -xzf file.tar.gz -C temp_extract
          cp temp_extract/pactus-cli_1.6.4_linux_amd64/* ${{ env.SOURCE_PATH }}/
          rm -rf temp_extract file.tar.gz
          ls -la ${{ env.SOURCE_PATH }}

      - name: Build application
        run: flutter build linux --release

      - name: Archive Release
        run: |
          cp -r ${{ env.SOURCE_PATH }}/* build/linux/x64/release/bundle/
          cd build/linux/x64/release/bundle
          zip -r linux-build.zip ./*

      - name: Create Linux Release
        id: create_linux_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: linux-release-${{ github.run_number }}
          release_name: Linux Release ${{ github.run_number }}
          body: |
            Linux release from merged PR #${{ github.event.pull_request.number }}
            ${{ github.event.pull_request.title }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: linux-release-${{ github.run_number }}
          files: build/linux/x64/release/bundle/linux-build.zip

  notify-linux:
    needs: build-and-release-linux
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            üöÄ *Linux Release Published!*
            
            üì¶ Version: Linux Release ${{ github.run_number }}
            üîÑ PR: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            üë§ Requested by: ${{ github.event.pull_request.user.login }}
            ‚úÖ Merged by: ${{ github.event.pull_request.merged_by.login }}
            
            üì• *Download Link:*
            [Linux Build](https://github.com/${{ github.repository }}/releases/download/linux-release-${{ github.run_number }}/linux-build.zip)
            
            üîç [View Release](https://github.com/${{ github.repository }}/releases/tag/linux-release-${{ github.run_number }})

      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            üöÄ **Linux Release Published!**
            
            üì¶ Version: Linux Release ${{ github.run_number }}
            üîÑ PR: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            üë§ Requested by: ${{ github.event.pull_request.user.login }}
            ‚úÖ Merged by: ${{ github.event.pull_request.merged_by.login }}
            
            üì• *Download Link:*
            [Linux Build](https://github.com/${{ github.repository }}/releases/download/linux-release-${{ github.run_number }}/linux-build.zip)
            
            üîç [View Release](https://github.com/${{ github.repository }}/releases/tag/linux-release-${{ github.run_number }})

  build-and-release-windows:
    if: github.event.pull_request.merged == true
    runs-on: windows-latest
    outputs:
      release_tag: windows-release-${{ github.run_number }}
      platform: Windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Fetch and Extract File
        shell: pwsh
        run: |
          New-Item -Path "${{ env.SOURCE_PATH }}" -ItemType Directory -Force
          Invoke-WebRequest -Uri ${{ env.WINDOWS_ASSETS_URL }} -OutFile "file.zip"
          New-Item -Path "temp_extract" -ItemType Directory -Force
          Expand-Archive -Path "file.zip" -DestinationPath "temp_extract" -Force
          Copy-Item -Path "temp_extract/pactus-cli_1.6.4_windows_amd64/*" -Destination "${{ env.SOURCE_PATH }}/" -Force
          Remove-Item -Path "temp_extract" -Recurse -Force
          Remove-Item "file.zip"
          Get-ChildItem "${{ env.SOURCE_PATH }}"

      - name: Build application
        run: |
          flutter doctor -v
          flutter build windows --release
          dir build\windows\x64\runner\Release

      - name: Verify build directory
        run: |
          if (Test-Path "build\windows\x64\runner\Release") {
              echo "‚úì Build directory exists"
              dir build\windows\x64\runner\Release
          } else {
              echo "√ó Build directory not found"
              exit 1
          }

      - name: Archive Release
        shell: pwsh
        run: |
          cd build/windows/x64/runner/Release
          Copy-Item -Path "${{ env.SOURCE_PATH }}/*" -Destination "." -Recurse -Force
          Compress-Archive -Path * -DestinationPath windows-build.zip -Force

      - name: Create Windows Release
        id: create_windows_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: windows-release-${{ github.run_number }}
          release_name: Windows Release ${{ github.run_number }}
          body: |
            Windows release from merged PR #${{ github.event.pull_request.number }}
            ${{ github.event.pull_request.title }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: windows-release-${{ github.run_number }}
          files: build/windows/x64/runner/Release/windows-build.zip

  notify-windows:
    needs: build-and-release-windows
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            üöÄ *Windows Release Published!*
            
            üì¶ Version: Windows Release ${{ github.run_number }}
            üîÑ PR: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            üë§ Requested by: ${{ github.event.pull_request.user.login }}
            ‚úÖ Merged by: ${{ github.event.pull_request.merged_by.login }}
            
            üì• *Download Link:*
            [Windows Build](https://github.com/${{ github.repository }}/releases/download/windows-release-${{ github.run_number }}/windows-build.zip)
            
            üîç [View Release](https://github.com/${{ github.repository }}/releases/tag/windows-release-${{ github.run_number }})

      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            üöÄ **Windows Release Published!**
            
            üì¶ Version: Windows Release ${{ github.run_number }}
            üîÑ PR: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            üë§ Requested by: ${{ github.event.pull_request.user.login }}
            ‚úÖ Merged by: ${{ github.event.pull_request.merged_by.login }}
            
            üì• *Download Link:*
            [Windows Build](https://github.com/${{ github.repository }}/releases/download/windows-release-${{ github.run_number }}/windows-build.zip)
            
            üîç [View Release](https://github.com/${{ github.repository }}/releases/tag/windows-release-${{ github.run_number }})

  build-and-release-macos:
    if: github.event.pull_request.merged == true
    runs-on: macos-latest
    outputs:
      release_tag: macos-release-${{ github.run_number }}
      platform: macOS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Fetch and Extract File
        run: |
          mkdir -p ${{ env.SOURCE_PATH }}
          curl -L -o file.tar.gz ${{ env.MACOS_ASSETS_URL }}
          mkdir -p temp_extract
          tar -xzf file.tar.gz -C temp_extract
          cp -r temp_extract/pactus-cli_1.6.4_darwin_arm64/* ${{ env.SOURCE_PATH }}/
          rm -rf temp_extract file.tar.gz
          ls -la ${{ env.SOURCE_PATH }}

      - name: Build application
        run: |
          flutter doctor -v
          flutter build macos --release
          ls build/macos/Build/Products/Release

      - name: Verify build directory
        run: |
          if [ -d "build/macos/Build/Products/Release" ]; then
            echo "‚úì Build directory exists"
            ls -la build/macos/Build/Products/Release
          else
            echo "√ó Build directory not found"
            exit 1
          fi

      - name: Archive Release
        run: |
          cd build/macos/Build/Products/Release
          cp -r ${{ env.SOURCE_PATH }}/* .
          zip -r macos-build.zip ./*

      - name: Create macOS Release
        id: create_macos_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: macos-release-${{ github.run_number }}
          release_name: macOS Release ${{ github.run_number }}
          body: |
            macOS release from merged PR #${{ github.event.pull_request.number }}
            ${{ github.event.pull_request.title }}
          draft: false
          prerelease: false

      - name: Upload macOS Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: macos-release-${{ github.run_number }}
          files: build/macos/Build/Products/Release/macos-build.zip

  notify-macos:
    needs: build-and-release-macos
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            üöÄ *macOS Release Published!*
            
            üì¶ Version: macOS Release ${{ github.run_number }}
            üîÑ PR: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            üë§ Requested by: ${{ github.event.pull_request.user.login }}
            ‚úÖ Merged by: ${{ github.event.pull_request.merged_by.login }}
            
            üì• *Download Link:*
            [macOS Build](https://github.com/${{ github.repository }}/releases/download/macos-release-${{ github.run_number }}/macos-build.zip)
            
            üîç [View Release](https://github.com/${{ github.repository }}/releases/tag/macos-release-${{ github.run_number }})

      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            üöÄ **macOS Release Published!**
            
            üì¶ Version: macOS Release ${{ github.run_number }}
            üîÑ PR: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            üë§ Requested by: ${{ github.event.pull_request.user.login }}
            ‚úÖ Merged by: ${{ github.event.pull_request.merged_by.login }}
            
            üì• *Download Link:*
            [macOS Build](https://github.com/${{ github.repository }}/releases/download/macos-release-${{ github.run_number }}/macos-build.zip)
            
            üîç [View Release](https://github.com/${{ github.repository }}/releases/tag/macos-release-${{ github.run_number }})
